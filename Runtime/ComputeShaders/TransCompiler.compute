#pragma kernel TransCompile

#include "./TransHelper.hlsl"

Texture2D<float4> Source;
RWStructuredBuffer<float3> AtlasMap;

RWStructuredBuffer<float4> Target;
RWStructuredBuffer<float> TargetDistansMap;
uint Size;

SamplerState samplerSource;

[numthreads(32, 32, 1)] void TransCompile(uint3 id : SV_DispatchThreadID)
{
    uint OneDIndex = TwoDToOneDIndex((uint2)id, Size);

    float3 AtlasMapNawPixsel = AtlasMap[OneDIndex];
    float TargetDistansNawPixsel = TargetDistansMap[OneDIndex];
    float IsWiret = 1 - step(AtlasMapNawPixsel.z, TargetDistansNawPixsel); // A > T

    float4 SousePicColor = Source.SampleLevel(samplerSource, AtlasMapNawPixsel.xy, 0);

    Target[OneDIndex] = lerp(Target[OneDIndex], SousePicColor, IsWiret);
    TargetDistansMap[OneDIndex] = lerp(TargetDistansNawPixsel, AtlasMapNawPixsel.z, IsWiret);
}
